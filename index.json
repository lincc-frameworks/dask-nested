{"project": "nested-dask", "project_url": "https://github.com/lincc-frameworks/nested-dask", "show_commit_url": "https://github.com/lincc-frameworks/nested-dask/commit/", "hash_length": 8, "revision_to_hash": {"0": "506c831a3b9bbbf344f65def6570335826e410fe", "26": "954ab7370714a5255877026dc642092e1d661410", "30": "f2d5d69f7068dc11521eeee231756dc0f6242066", "31": "ff95edab656d0d727446a8183ca6c47bb6da94d9", "40": "916562d04f15788342a4092291bb01b99269376f", "43": "78efcd63a48150e1f06e94b96d64a8c27d520564", "47": "7ffa7028e5b7bfeab439dce27e19346f918582a5", "51": "d566eccdf523106d2f4eb3d19d563e10d5631714", "53": "dac51883c3eaf51023737fe0ea7f563fb440d680", "63": "e83baefe752f49cfeb7f81be6422ba5e14b700ad", "68": "6af844c7a18eb314e15131a4d80453fb5bb01491", "71": "3500be8cd8968d0e7063356da22be0a117140419"}, "revision_to_date": {"0": 1713466053000, "26": 1716311389000, "30": 1716323196000, "31": 1716323234000, "40": 1716488174000, "43": 1716490299000, "47": 1716499123000, "51": 1716937696000, "53": 1717089169000, "63": 1717094319000, "68": 1717171961000, "71": 1717188582000}, "params": {"machine": ["gh-runner"], "python": ["3.10"], "Cython": [""], "build": [""], "packaging": [""], "branch": ["HEAD"]}, "graph_param_list": [{"machine": "gh-runner", "python": "3.10", "Cython": "", "build": "", "packaging": "", "branch": "HEAD"}], "benchmarks": {"benchmarks.NestedFrameAddNested.peakmem_run": {"code": "class NestedFrameAddNested:\n    def peakmem_run(self):\n        \"\"\"Benchmark the memory usage of adding a nested layer\"\"\"\n        self.run()\n\n    def setup(self):\n        \"\"\"Set up the benchmark environment\"\"\"\n        self.base_nf, self.layer_nf = _generate_benchmark_data(add_nested=False)", "name": "benchmarks.NestedFrameAddNested.peakmem_run", "param_names": [], "params": [], "type": "peakmemory", "unit": "bytes", "version": "db26c2836d56ca35e5421406d56e6c4de7972b479c29dee071cb1dd086382930"}, "benchmarks.NestedFrameAddNested.time_run": {"code": "class NestedFrameAddNested:\n    def time_run(self):\n        \"\"\"Benchmark the runtime of adding a nested layer\"\"\"\n        self.run()\n\n    def setup(self):\n        \"\"\"Set up the benchmark environment\"\"\"\n        self.base_nf, self.layer_nf = _generate_benchmark_data(add_nested=False)", "min_run_count": 2, "name": "benchmarks.NestedFrameAddNested.time_run", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "fda6ec1088e8e98ead17c2ee5d47d0a01600609ac6c875a45a86f1c381d7b60e", "warmup_time": -1}, "benchmarks.NestedFrameQuery.peakmem_run": {"code": "class NestedFrameQuery:\n    def peakmem_run(self):\n        \"\"\"Benchmark the memory usage of applying the two queries\"\"\"\n        self.run()\n\n    def setup(self):\n        \"\"\"Set up the benchmark environment\"\"\"\n        self.nf = _generate_benchmark_data(add_nested=True)", "name": "benchmarks.NestedFrameQuery.peakmem_run", "param_names": [], "params": [], "type": "peakmemory", "unit": "bytes", "version": "cde6872b81facd303e638555fdca89d1f48c05ba67760f580accf212041e2157"}, "benchmarks.NestedFrameQuery.time_run": {"code": "class NestedFrameQuery:\n    def time_run(self):\n        \"\"\"Benchmark the runtime of applying the two queries\"\"\"\n        self.run()\n\n    def setup(self):\n        \"\"\"Set up the benchmark environment\"\"\"\n        self.nf = _generate_benchmark_data(add_nested=True)", "min_run_count": 2, "name": "benchmarks.NestedFrameQuery.time_run", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "94628bc8b6d29ee6e761351ba728f2cfba1743530dd5372316fb490c1266653e", "warmup_time": -1}, "benchmarks.NestedFrameReduce.peakmem_run": {"code": "class NestedFrameReduce:\n    def peakmem_run(self):\n        \"\"\"Benchmark the memory usage of applying the reduce function\"\"\"\n        self.run()\n\n    def setup(self):\n        \"\"\"Set up the benchmark environment\"\"\"\n        self.nf = _generate_benchmark_data(add_nested=True)", "name": "benchmarks.NestedFrameReduce.peakmem_run", "param_names": [], "params": [], "type": "peakmemory", "unit": "bytes", "version": "cd62b02e75f002c3589e79813481691db88887b1e27b7c791e187fc324d5faba"}, "benchmarks.NestedFrameReduce.time_run": {"code": "class NestedFrameReduce:\n    def time_run(self):\n        \"\"\"Benchmark the runtime of applying the reduce function\"\"\"\n        self.run()\n\n    def setup(self):\n        \"\"\"Set up the benchmark environment\"\"\"\n        self.nf = _generate_benchmark_data(add_nested=True)", "min_run_count": 2, "name": "benchmarks.NestedFrameReduce.time_run", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "d9dacb2801484da366e419dbed981847476cd7ec26e14ad5a067a73fe217f526", "warmup_time": -1}}, "machines": {"gh-runner": {"machine": "gh-runner", "version": 1}}, "tags": {"v0.1.1": 68}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}